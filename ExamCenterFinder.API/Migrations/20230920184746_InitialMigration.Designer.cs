// <auto-generated />
using System;
using ExamCenterFinder.API.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamCenterFinder.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230920184746_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamCenterFinder.API.Data.Entities.ExamCenter", b =>
                {
                    b.Property<int>("ExamCenterId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("MaximumSeatingCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ExamCenterId");

                    b.ToTable("ExamCenters");
                });

            modelBuilder.Entity("ExamCenterFinder.API.Data.Entities.ExamCenterSlot", b =>
                {
                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamCenterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFilled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("SlotId");

                    b.HasIndex("ExamCenterId");

                    b.ToTable("ExamCenterSlots");
                });

            modelBuilder.Entity("ExamCenterFinder.API.Data.Entities.ExamCenterSlotBooking", b =>
                {
                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("SlotBookedOn")
                        .HasColumnType("int");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("SlotId");

                    b.ToTable("ExamCenterSlotBookings");
                });

            modelBuilder.Entity("ExamCenterFinder.API.Data.Entities.ExamCenterSlot", b =>
                {
                    b.HasOne("ExamCenterFinder.API.Data.Entities.ExamCenter", "ExamCenter")
                        .WithMany("ExamCenterSlots")
                        .HasForeignKey("ExamCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamCenter");
                });

            modelBuilder.Entity("ExamCenterFinder.API.Data.Entities.ExamCenterSlotBooking", b =>
                {
                    b.HasOne("ExamCenterFinder.API.Data.Entities.ExamCenterSlot", "ExamCenterSlot")
                        .WithMany()
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamCenterSlot");
                });

            modelBuilder.Entity("ExamCenterFinder.API.Data.Entities.ExamCenter", b =>
                {
                    b.Navigation("ExamCenterSlots");
                });
#pragma warning restore 612, 618
        }
    }
}
